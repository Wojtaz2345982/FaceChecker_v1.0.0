@model HackHeroes0._1.Models.ViewModels.CreateLessonViewModel

@{
    ViewData["Title"] = "CreateLesson";
    ViewBag.ClassList = new SelectList(@Model.AvailableClasses, "Id", "EncodedName");
}

<h1 class="text-theme">Utwórz lekcję</h1>

<h4 class="text-theme">Panel tworzenia lekcji</h4>
<hr class="text-theme" />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateLesson">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="@Model.LessonCommand.Topic" class="control-label text-theme" style="margin-bottom: 4px; font-size: 14px;">Temat</label>
                <input asp-for="@Model.LessonCommand.Topic" class="form-control" style="font-size:19px;" />
                <span asp-validation-for="@Model.LessonCommand.Topic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <select asp-for="LessonCommand.ClassEncodedName" class="form-select form-select-lg my-3">
                    @foreach (var classItem in Model.AvailableClasses)
                    {
                        <option value="@classItem.EncodedName">@classItem.Name</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <div class="btn-group">
                    <input type="submit" value="Dodaj" class="btn btn-primary btn btn-theme btn btn-primary sub-btn card-btn btn-theme card-btn-theme" />
                    <a asp-action="LessonsIndex" class="btn btn-primary btn btn-theme btn btn-primary sub-btn card-btn btn-theme card-btn-theme">Powrót</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
